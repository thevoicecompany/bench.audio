// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    uuid        String   @id @default(uuid())
    fingerprint String
    Battle      Battle[]
}

enum ConvoType {
    Online
    Phone
}

enum ConvoLength {
    Short
    Medium
    Unbounded
}

enum Provider {
    Retell
    Vapi
    Bland
    Hume
}

enum BattleState {
    Idle
    CreatedBattle
    PreparingConvoA
    PreparedConvoA
    StartingCallA
    InProgressConvoA
    DoneConvoA
    PreparingConvoB
    PreparedConvoB
    StartingCallB
    InProgressConvoB
    DoneConvoB
    Voting
    Done
    Cancelled
    Error
}

model Elo {
    id      String @id @default(uuid())
    score   Int    @default(500)
    model   Model  @relation(fields: [modelId], references: [id])
    modelId String @unique
}

model Model {
    id          String   @id @default(uuid())
    label       String   @unique
    provider    Provider
    llmConfig   Json
    asrConfig   Json?
    ttsConfig   Json?
    extraConfig Json?
    battlesA    Battle[] @relation("ModelABattle")
    battlesB    Battle[] @relation("ModelBBattle")
    elo         Elo?
}

model Images {
    id                     String @id @default(uuid())
    avg_win_rate_src       String
    bootstrap_elo_src      String
    predicted_win_rate_src String
}

model Convo {
    id                String   @id @default(uuid())
    prompt            Json?
    convoTranscript   String?
    inputAudioFileId  String?
    outputAudioFileId String?
    battlesA          Battle[] @relation("ConvoABattle")
    battlesB          Battle[] @relation("ConvoBBattle")
}

enum Outcome {
    WinA
    WinB
    Tie
    TieBothBad
}

model Battle {
    id          String      @id @default(uuid())
    user        User        @relation(fields: [userUuid], references: [uuid])
    modelA      Model       @relation("ModelABattle", fields: [modelAId], references: [id])
    modelB      Model       @relation("ModelBBattle", fields: [modelBId], references: [id])
    convoA      Convo?      @relation("ConvoABattle", fields: [convoAId], references: [id])
    convoB      Convo?      @relation("ConvoBBattle", fields: [convoBId], references: [id])
    convoLength ConvoLength
    convoType   ConvoType
    userUuid    String
    modelAId    String
    modelBId    String
    convoAId    String?
    convoBId    String?
    state       BattleState
    outcome     Outcome?
    promptKey   String      @default("friend")
}
